// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  SECRETARIA
  TOTEM
}

enum AppoimentsStatus {
  SCHEDULED
  CONFIRMED
  WAITING_APPOIMENT
  IN_APPOINTMENT
  FINISIHED
  CANCELED
}

model Users {
  id       String  @id @default(uuid())
  name     String
  email    String  @unique
  password String
  photo    String?
  role     Role    @default(SECRETARIA)
  active   Boolean @default(true)
  birth_date String?

  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  Appoiments Appoiments[]
}

model ExamTypes {
  id                     String  @id @default(uuid())
  name                   String
  description            String?
  defaultDuration        String
  preparationInstruction String
  active                 Boolean

  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  Appoiments Appoiments[]
}

model Appoiments {
  id                 String           @id @default(uuid())
  patient_cpf        String
  patient_name       String
  patient_phone      String
  patient_email      String
  patient_birth_date String
  user               Users            @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId             String
  examsType          ExamTypes        @relation(fields: [examsTypeId], references: [id], onDelete: Cascade)
  examsTypeId        String
  date               DateTime
  status             AppoimentsStatus @default(SCHEDULED)
  details            String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model SystemConfig {
  id             Int     @id @default(1)
  initialized    Boolean @default(false)
  maxWaitTimeMin Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt 
}
